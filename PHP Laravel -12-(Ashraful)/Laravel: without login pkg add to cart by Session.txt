1. First all form data save into Cookies/Session with the json-format
2. after login use custom method for further operation and redirect to route . 
-----------------------------------------------------------------------------


1. store data in session : 
-------------------------
 public function storeQuotation(Request $request)
    {

        // dd($request);
        // Validate the request
        $validated = $request->validate([
            'pkg_id' => 'required|exists:fire_insurance_new_pkgs,id',
            'property_name' => 'required|string|max:255',
            'property_type' => 'required|string|in:company,organization,office,home,commercial',
            'email' => 'required|email|max:255',
            'phone' => 'required|string|max:20',
            'address_line' => 'required|string|max:255',
            'city' => 'required|string|max:100',
            'state' => 'required|string|max:100',
            'postal_code' => 'required|string|max:20',
            'coverage_amount' => 'required|numeric|min:50000',
            'property_documents' => 'required|array',
            'property_documents.*' => 'file|mimes:pdf,jpg,jpeg,png|max:5120', // 5MB limit per file
        ]);

        // Calculate the premium
        $coverageAmount = $validated['coverage_amount'];
        $unitSize = 50000;
        $premiumPerUnit = 250;
        $units = ceil($coverageAmount / $unitSize);
        $premium = $units * $premiumPerUnit;

        // Generate a unique reference number
        $referenceNumber = 'FIQ-' . date('Ymd') . '-' . Str::random(6);

        // Save documents
        $documentPaths = [];
        if ($request->hasFile('property_documents')) {
            foreach ($request->file('property_documents') as $file) {
                $path = $file->store('fire-insurance/documents', 'public');
                $documentPaths[] = $path;
            }
        }

        // Prepare quotation data
        $quotationData = [
            'pkg_id' => $validated['pkg_id'],
            'reference_number' => $referenceNumber,
            'property_name' => $validated['property_name'],
            'property_type' => $validated['property_type'],
            'email' => $validated['email'],
            'phone' => $validated['phone'],
            'address_line' => $validated['address_line'],
            'city' => $validated['city'],
            'state' => $validated['state'],
            'postal_code' => $validated['postal_code'],
            'coverage_amount' => $coverageAmount,
            'premium_amount' => $premium,
            'documents' => json_encode($documentPaths),
            'status' => 'pending',
        ];

        // Check if user is logged in
        if (auth()->check()) {
            // User is logged in, save directly to database with user_id
            $quotation = new FireInsuranceQuotation($quotationData);
            $quotation->user_id = auth()->id();
            $quotation->save();

            $message = 'Your fire insurance quotation request has been submitted successfully! Reference Number: ' . $referenceNumber;

            // Return with success message
            return redirect()->route('fire-insurance.details', ['id' => $quotation->id])->with('success', $message);
        } else {
            // User is not logged in, store in session
            session()->put('pending_fire_quotation', $quotationData);

            $message = 'Your quotation has been saved temporarily. Please login or register to complete your submission. Reference Number: ' . $referenceNumber;


            return redirect()->route('login')->with('success', $message);
        }

        return redirect()->back()->with('success', $message);
    }

2. after login do the further process: 
-----------------------------------------
  protected function redirectTo()
    {
        if (Auth::check() && Auth::user()->user_type == 'customer') {
            // dd('okk');
            // dd(Session::all());

            //Ashraful : -------------------------------------------------------

            // Check if there's a pending fire quotation in the session
            if (Session::has('pending_fire_quotation')) {
                // Get the quotation data from session
                $quotationData = Session::get('pending_fire_quotation');

                // Add the user ID to the data
                $quotationData['user_id'] = auth()->user()->id;


                // Save to database
                $quotation = FireInsuranceQuotation::create($quotationData);

                Log::info(["===========save the quotation fire : " => $quotation]);

                // Clear the session
                Session::forget('pending_fire_quotation');

                // Set a notification message
                Session::flash('quotation_saved', 'Your pending fire insurance quotation has been saved to your account.');

                // Redirect to the quotation details page

                $message = 'Your fire insurance quotation request has been submitted successfully! ';

                //  dd($quotation);

                // Fixed code
                Session::flash('success', 'Your fire insurance quotation request has been submitted successfully!Reference Number: ' . $quotation->reference_number);
                return $this->redirectTo = route('fire-insurance.details', ['id' => $quotation->id]);
            }
}


======================================================= Old method ================================================================================
#working flow => *** Laravel after login back to previouse controller or view. 
-----------------
1. show the life pkg for anonimous user => Click 'Buy Now' from pkg => 2. goto route 'addTo_cart_for_all'(for anomimus User) ,Controller: In store all data in session which need to order  and send to route => 
=> 3.'addTo_cart' (for login User & optional work: route must be get:method) , get all data from session then create order . 


#session Problem fix: 
------------------------
1. route => 'life-insurance' =>  (hospital card id,tele medicine fee + call , promo code hiden )

*****those value  pass by form to route =>   @guest route -> addTo_cart_for_all (with params in hidden input fields ). 
        Store those input filed value in session storage . 
        
                    =>  // Store the form data in the session: 
                            Session::put('life_health', [
                                'id' => $lifeHealthId,
                                'hospital_card' => $request->hospital_card,
                                'teli_medicine_charge' => $request->teli_medicine_charge,
                                'billing_frequency' => $request->billing_frequency,
                            ]);
                    => **** if form input field is hidden no need to use session . cause hidden inupt filed pass to the next route . 
                            
                             =>  Route::get('/addTo_cart/{id}', [cart_all::class, 'addTo_cart'])->name('addTo_cart'); [can receive all input fields , so no need to handle session . ]
                


================================================================Main coding part ===============================================================
1. From 'view' pass all data to addTo_cart route (*** add to cart must be get method): 
----------------------------------------------------------------------------------------

 <form action="{{ route('addTo_cart_for_all', $life_health->id) }}"
  method="POST">
 @csrf


2. Function for handle the session: 
------------------------------------
route: 
---------

Route::post('/life-insurance-form-addTo_cart/{id}', 'Frontend\HomeController@addToCartWithoutLogin')->name('addTo_cart_for_all'); //this route will be  common for all product / service
--------------------------------------------------------------
Controller: 
--------------
 public function addToCartWithoutLogin(Request $request, $lifeHealthId)
    {

        // ---------------------------------------------------------------------
        $formData = $request->all(); // You can adjust this according to your form structure



        // Store the form data in the session
        Session::put('life_health', [
            'id' => $lifeHealthId,
            'hospital_card' => $request->hospital_card,
            'teli_medicine_charge' => $request->teli_medicine_charge,
            'billing_frequency' => $request->billing_frequency,
        ]);

        if (Session::has('life_health')) {

            $lf_session = Session::get('life_health');
            echo "get the session ";
        }

        // dd($formData);



        // You can also flash a success message if needed
        $request->session()->flash('success_message', 'Item added to cart successfully');

        // Redirect back to the previous page or any other appropriate page
        // return redirect('login');

        $lf_session = Session::get('life_health');
        return redirect()->route('addTo_cart', $lf_session['id'])->send(); // .

      
        // ---------------------------------------------------------------------
        
    }

