@php
    // Assuming $life_health is available in the Blade view
    $comboPkg = $life_health->combo_pkg == 'on';
    $comboPerson = $life_health->combo_person ?? 1; // default to 1 if null
    $personNames = $life_health->personName ?? []; // default to empty array if null
@endphp

<div class="form-check">
    <input class="form-check-input" type="checkbox" id="comboPackageCheckbox" name="combo_pkg">
    <label class="form-check-label" for="comboPackageCheckbox">
        Combo Packages
    </label>
</div>

<div id="totalPersonsDiv" class="d-none mt-3">
    <div class="form-group">
        <label for="totalPersons">Total number of persons:</label>
        <input type="number" class="form-control" id="totalPersons" min="1" max="10" name="combo_person">
    </div>
    <button type="button" class="btn btn-primary" id="generateFieldsButton">Generate Fields</button>
</div>

<div id="namesContainer" class="mt-3"></div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function() {
        // Pre-fill the form fields
        function prefillFields() {
            let comboPkg = @json($comboPkg);
            let comboPerson = @json($comboPerson);
            let personNames = @json($personNames);

            // Set the checkbox status
            $('#comboPackageCheckbox').prop('checked', comboPkg);

            // Set the total persons value
            $('#totalPersons').val(comboPerson);

            // Generate person name fields
            $('#namesContainer').html('');
            for (let i = 0; i < personNames.length; i++) {
                let nameField = `<div class="form-group">
                                    <label for="personName${i}">Person ${i + 1} Name:</label>
                                    <input type="text" class="form-control" name="personName[]" id="personName${i}" placeholder="Person ${i + 1} Name" value="${personNames[i]}">
                                  </div>`;
                $('#namesContainer').append(nameField);
            }
        }

        prefillFields();

        $('#comboPackageCheckbox').change(function() {
            if ($(this).is(':checked')) {
                $('#totalPersonsDiv').removeClass('d-none');
            } else {
                $('#totalPersonsDiv').addClass('d-none');
                $('#namesContainer').html('');
            }
        });

        $('#generateFieldsButton').click(function() {
            let numberOfPersons = parseInt($('#totalPersons').val(), 10);
            $('#namesContainer').html('');

            for (let i = 0; i < numberOfPersons; i++) {
                let nameField = `<div class="form-group">
                                    <label for="personName${i}">Person ${i + 1} Name:</label>
                                    <input type="text" class="form-control" name="personName[]" id="personName${i}" placeholder="Person ${i + 1} Name">
                                  </div>`;
                $('#namesContainer').append(nameField);
            }
        });

        function updateLife() {
            let comboPkg = $('#comboPackageCheckbox').is(':checked') ? 1 : 0;
            let comboPerson = $('#totalPersons').val();
            let personNames = [];
            $('input[name="personName[]"]').each(function() {
                personNames.push($(this).val());
            });

            let $life = {
                combo_pkg: comboPkg,
                combo_person: comboPerson,
                personNames: personNames
            };

            console.log($life);

            // Uncomment and set the correct endpoint if needed
            // $.post('/your-server-endpoint', $life, function(response) {
            //     console.log(response);
            // });
        }

        $(document).on('change', '#comboPackageCheckbox, #totalPersons, input[name="personName[]"]', updateLife);
    });
</script>
